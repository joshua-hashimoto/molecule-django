# Generated by Django 3.1 on 2020-08-13 13:49

import articles.models
import cloudinary_storage.storage
import cloudinary_storage.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import martor.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tags', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('video', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(), upload_to=articles.models.upload_video_to, validators=[cloudinary_storage.validators.validate_video])),
                ('cover', models.ImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to=articles.models.upload_image_to)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('content', martor.models.MartorField()),
                ('keywords', models.CharField(default='プログラミング', max_length=255, verbose_name='記事のキーワード')),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_articles', models.ManyToManyField(blank=True, related_name='_article_related_articles_+', to='articles.Article', verbose_name='related articles')),
                ('tags', models.ManyToManyField(blank=True, to='tags.Tag')),
            ],
            options={
                'ordering': ['-publish_at', '-timestamp', '-updated'],
            },
        ),
    ]
